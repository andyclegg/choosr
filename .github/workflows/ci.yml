name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    env:
      DISPLAY: ':99.0'

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install system dependencies for Qt
      run: |
        sudo apt-get update
        sudo apt-get install -y libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run Ruff linter
      run: uv run ruff check .

    - name: Run Ruff formatter check
      run: uv run ruff format --check .

    - name: Run tests
      run: uv run pytest --tb=short -v

    - name: Test installation process
      run: |
        # Test that the package can be built
        uv build
        # Test that choosr can be invoked
        uv run choosr --help

  test-ubuntu-packages:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: uv sync --dev

    - name: Test choosr functionality
      run: |
        # Test config initialization
        timeout 10s uv run choosr init || true
        # Test help command
        uv run choosr --help
        # Verify the application structure
        uv run python -c "import choosr; import browser; import chrome; import firefox; print('All modules import successfully')"


  build-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Build package
      run: uv build

    - name: Check build artifacts
      run: |
        ls -la dist/
        # Verify wheel and sdist were created
        test -f dist/*.whl
        test -f dist/*.tar.gz
        echo "âœ… Build artifacts created successfully"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/
        retention-days: 7
